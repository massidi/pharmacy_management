{% extends 'base.html.twig' %}

{% block title %}New Supplier{% endblock %}

{% block content %}
    <div class="container">

        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">

                        <div class="card-header card-header-primary">
                            <h4 class="card-title ">Cr√©er un nouveau fournisseur</h4>
                            <p class="card-category"> Here is a subtitle for this table</p>
                        </div>
                        <div class="card-body">
                            {{ include('supplier/_form.html.twig') }}
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

{#    <a href="{{ path('supplier_index') }}">back to list</a>#}
{% endblock %}

{% block javascripts %}
{{ parent() }}
    <script>
        function deleteFormToCollection($panel) {
            var $removeButton=$('<a href="#" class="btn btn-danger">Remove</a>');
            var spanelFooter=$('<div class="panel-footer"></div>').append($removeButton);

            $removeButton.click(function (e){

            });
            $panel.append(spanelFooter)


        }

        function addFormToCollection($collectionHolderClass) {
            // Get the ul that holds the collection of tags
            var $collectionHolder = $('.' + $collectionHolderClass);

            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('.products').append(newForm);
            // Add the new form at the end of the list
            $collectionHolder.append($newFormLi)
        }

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of products
            var $productsCollectionHolder = $('.products');
            var $collectionHolderClass1= $('#list_pro');
             $collectionHolderClass1.find('ul.products').each(function (){
                 deleteFormToCollection($(this))
             });
            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $productsCollectionHolder.data('index', $productsCollectionHolder.find('input').length);

            $('.add_item_link').click( function(e) {
                var $collectionHolderClass = $(e.currentTarget).data('collectionHolderClass');
                // add a new tag form (see next code block)
                addFormToCollection($collectionHolderClass);
            });

            // $('.delete_item_link').on('click', function(e) {
            //     var $collectionHolderClass1 = $(e.currentTarget).data('collectionHolderClass');
            //     // add a new tag form (see next code block)
            //     deleteFormToCollection($collectionHolderClass1);
            // });
        });


    </script>
{% endblock %}